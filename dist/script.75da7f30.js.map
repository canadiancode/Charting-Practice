{"version":3,"sources":["script.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["chartTimeframe","AddedPriceData","assetPricesData","selectedAssetIDs","selectedAssetNames","selectedAssetID","selectedAssetName","selectedTimePeriod","yAxisCount","fetchTimeframe","URL","fetch","response","json","data","prices","price","epochTimeframe","formattedDate","Date","longTimeframe","toUTCString","timeframe","substring","push","displayedChart","labels","update","console","log","fetchPrice","newDataObject","label","fill","pointRadius","borderWidth","backgroundColor","borderColor","yAxisID","datasets","assetListURL","assetListEl","document","querySelector","addDataButton","getAssetList","assetListData","asset","id","assetID","listOptions","createElement","classList","add","name","assetName","value","appendChild","createTextNode","addAsset","assetList","selectedEl","options","selectedIndex","ID","selectedAssetListEl","addedAsset","removeButtonEl","buttonTextEl","yAxisNumberString","toString","yAxisvalue","fetchNewPrice","randomHSL","Math","random","randomColor","addEventListener","changeTimeframe","timeframeList","fetchNewTimeframe","timeframeURL","fetchedData","timeData","time","singleAssetPriceData","listOfAssetPrices","scales","assetPriceURL","assetPriceData","assetPriceAndTime","forEach","array","justPrice","i","length","selectedBackgroundColor","selectedBorderColor","selectedTimePeriodEl","chartScale","autoChartOption","changeChartScale","logChartOption","event","target","contains","style","y","type","ctx","Chart","display","position","onresize","width","height","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","getElementById","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"../src","sourcesContent":["\n    // FETCHING AND UPDATING THE CHART\n// arrays for the price and timeframe\nlet chartTimeframe = []; \nlet AddedPriceData = []; // the new asset getting added in\nlet assetPricesData = []; // list of all assets\n\n// variables for the data\nlet selectedAssetIDs = ['bitcoin'];\nlet selectedAssetNames = ['Bitcoin'];\nlet selectedAssetID = 'bitcoin';\nlet selectedAssetName = 'Bitcoin';\nlet selectedTimePeriod = '365';\n\n// count to add a new yAxis each time\nlet yAxisCount = 1;\n\n    // FETCH TIMEFRAME OF DATA\nasync function fetchTimeframe() {\n    try {\n        // link to fetch data from CoinGecko\n        let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n\n        // Get the dataset from CoinGecko API\n        let response = await fetch(URL);\n        let data = await response.json();\n        let prices = await data.prices;\n\n        // extraction of the desired data from dataset (time and price)\n        // use this instead of forEach for normal for loop for async await\n        chartTimeframe = [];\n        for (const price of prices) {\n            // change from Epoch time format to UTC\n            let epochTimeframe = await price[0];\n            let formattedDate = new Date(epochTimeframe);\n            let longTimeframe = formattedDate.toUTCString();\n            let timeframe = longTimeframe.substring(4, 16);        \n\n            // add time to label array\n            chartTimeframe.push(timeframe);\n        }\n\n        // update the chart with new timeframe\n        displayedChart.data.labels = chartTimeframe;\n        displayedChart.update();\n    }\n    catch(error) {\n        console.log('cannot get timeframe data from coingecko...')\n        console.log(error);\n    }\n};\n\n    // GET THE PRICE OF ASSET\nasync function fetchPrice() {\n    try {\n        // link to fetch data from CoinGecko\n        let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetIDs[0]}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n\n        // Get the dataset from CoinGecko API\n        let response = await fetch(URL);\n        let data = await response.json();\n        let prices = await data.prices;\n\n        // extraction of the desired data from dataset (time and price)\n        // use this instead of forEach for normal for loop for async await\n        AddedPriceData = [];\n        for (const price of prices) {\n            // add price data to arrays\n            AddedPriceData.push(price[1]);\n        }\n\n        // Adding new data to the assetPricesData array\n        let newDataObject = {\n            label: `Price of ${selectedAssetName}`,\n            data: AddedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFA500',\n            borderColor: '#FFA500',\n            yAxisID: 'y'\n        };\n        assetPricesData.push(newDataObject);\n        displayedChart.data.datasets = assetPricesData;\n        displayedChart.update();\n    }\n    catch(error) {\n        console.log('cannot get price data from coingecko...')\n        console.log(error);\n    }\n};\nfetchTimeframe();\nfetchPrice();\n\n    // GENERATE LIST OF ASSETS\nconst assetListURL = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\nconst assetListEl = document.querySelector('.assetList');\nconst addDataButton = document.querySelector('.addDataButton');\nasync function getAssetList() {\n    try {\n        // fetch the list of assets\n        let response = await fetch(assetListURL);\n        let assetListData = await response.json();\n\n        for (const asset of assetListData) {\n            // for the ID \n            let assetID = await asset.id;\n            const listOptions = document.createElement('option');\n            listOptions.classList.add(assetID);\n\n            // for the display name\n            let assetName = await asset.name;\n            listOptions.value = await assetName;\n\n            // add option onto the dropdown selection\n            listOptions.appendChild(document.createTextNode(assetName));\n            assetListEl.appendChild(listOptions);\n        }\n    }\n    catch(error) {\n        console.log(error);\n        console.log('cannot get list of assets from CoinGecko...');\n    }\n}\ngetAssetList();\n\n    // ADD NEW ASSET TO THE CHART\nfunction addAsset() {\n\n    // change the data on the chart\n    const assetList = document.querySelector('.assetList');\n    let selectedEl = assetList.options[assetList.selectedIndex];\n    let ID = selectedEl.classList[0];\n    selectedAssetID = ID;\n    selectedAssetName = assetList.value;\n    selectedAssetNames.push(selectedAssetName);\n    selectedAssetIDs.push(ID);\n    \n    // adding the tab on the selected list\n    const selectedAssetListEl = document.querySelector('.selectedAssetList');\n    const addedAsset = document.createElement('div');\n    addedAsset.classList.add('assetContainer');\n    const removeButtonEl = document.createElement('button');\n    removeButtonEl.appendChild(document.createTextNode('✖'));\n    removeButtonEl.classList.add('removeAsset');\n    addedAsset.appendChild(removeButtonEl);\n    const buttonTextEl = document.createElement('p');\n    buttonTextEl.classList.add('selectedAssetName');\n    buttonTextEl.appendChild(document.createTextNode(selectedAssetName));\n    addedAsset.appendChild(buttonTextEl);\n    selectedAssetListEl.appendChild(addedAsset);\n\n    // add a new yAxis to the chart\n    yAxisCount++;\n    let yAxisNumberString = yAxisCount.toString();\n    let yAxisvalue = 'y' + yAxisNumberString;\n\n    async function fetchNewPrice() {\n        try {\n            // link to fetch data from CoinGecko\n            let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n    \n            // Get the dataset from CoinGecko API\n            let response = await fetch(URL);\n            let data = await response.json();\n            let prices = await data.prices;\n    \n            // extraction of the desired data from dataset (time and price)\n            // use this instead of forEach for normal for loop for async await\n            AddedPriceData = [];\n            for (const price of prices) {\n                // add price data to arrays\n                AddedPriceData.push(price[1]);\n            };\n\n            // generate random light color\n            function randomHSL() {\n                return \"hsla(\" + ~~(360 * Math.random()) + \",\" + \"50%,\" + \"50%,1)\"\n            };\n            let randomColor = randomHSL();\n    \n            // Adding new data to the assetPricesData array\n            let newDataObject = {\n                label: `Price of ${selectedAssetName}`,\n                data: AddedPriceData,\n                fill: false,\n                pointRadius: 0,\n                borderWidth: 1,\n                backgroundColor: randomColor,\n                borderColor: randomColor,\n                yAxisID: yAxisvalue\n            };\n            assetPricesData.push(newDataObject);\n            displayedChart.data.datasets = assetPricesData;\n            displayedChart.update();\n\n            // incorporate variable for chart scale\n\n            // update the chart with new data\n            displayedChart.update();\n        }\n        catch(error) {\n            console.log('cannot get price data from coingecko...')\n            console.log(error);\n        }\n    };\n\n    // update the chart\n    fetchNewPrice();\n    fetchTimeframe();\n\n};\naddDataButton.addEventListener('click', addAsset);\n\n\n    // CHANGE THE TIME PERIOD ON THE CHART\nfunction changeTimeframe() {\n    const timeframeList = document.querySelector('.timeframeList');\n    selectedTimePeriod = timeframeList.value;\n\n    assetPricesData = [];\n\n    async function fetchNewTimeframe() {\n\n        try {\n                // FETCH AND DISPLAY TIMEFRAME DATA\n            let timeframeURL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            const response = await fetch(timeframeURL);\n            const fetchedData = await response.json();\n            const timeData = await fetchedData.prices;\n            \n            // remove old time data to replace with new data\n            chartTimeframe = [];\n\n            // looping through the fetched data and pushing to displayed array\n            for (const time of timeData) {\n                // change from Epoch time format to UTC\n                let epochTimeframe = await time[0];\n                let formattedDate = new Date(epochTimeframe);\n                let longTimeframe = formattedDate.toUTCString();\n                let timeframe = longTimeframe.substring(4, 16);   \n                chartTimeframe.push(timeframe);\n            }\n\n            // update the chart with the new time data\n            displayedChart.data.labels = chartTimeframe;\n            displayedChart.update();\n\n                // FETCH AND DISPLAY PRICE DATA\n            let singleAssetPriceData = [];\n            let listOfAssetPrices = [];\n\n            // this removes the old yAxis scales\n            displayedChart.options.scales = {};\n\n            for (const asset of selectedAssetIDs) {\n                let assetPriceURL = `https://api.coingecko.com/api/v3/coins/${asset}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n                const response = await fetch(assetPriceURL);\n                const assetPriceData = await response.json();\n                const assetPriceAndTime = await assetPriceData.prices;\n                singleAssetPriceData = [];\n                assetPriceAndTime.forEach(array => {\n                    const justPrice = array[1];\n                    singleAssetPriceData.push(justPrice);\n                });\n                listOfAssetPrices.push(singleAssetPriceData);\n            };\n            for (let i = 0; i < selectedAssetNames.length; i++) {\n\n                // add a new yAxis to the chart\n                yAxisCount++;\n                let yAxisNumberString = yAxisCount.toString();\n                let yAxisvalue = 'y' + yAxisNumberString;\n\n                // generate pre-selected color for each asset\n                let selectedBackgroundColor = displayedChart.data.datasets[i].backgroundColor;\n                let selectedBorderColor = displayedChart.data.datasets[i].borderColor;\n\n                let newDataObject = {\n                    label: `Price of ${selectedAssetNames[i]}`,\n                    data: listOfAssetPrices[i],\n                    fill: false,\n                    pointRadius: 0,\n                    borderWidth: 1,\n                    backgroundColor: selectedBackgroundColor,\n                    borderColor: selectedBorderColor,\n                    yAxisID: yAxisvalue\n                };\n                assetPricesData.push(newDataObject);\n            }\n            displayedChart.data.datasets = assetPricesData;\n            displayedChart.update();\n        }\n        catch(error) {\n            console.log('cannot get new timeframe data from coingecko...')\n            console.log(error);\n        }\n    }\n    fetchNewTimeframe();\n};\nconst selectedTimePeriodEl = document.querySelector('.timeframeList');\nselectedTimePeriodEl.addEventListener('change', changeTimeframe);\n\n    // CODE FOR CHANGING THE CHART SCALE\nlet chartScale = 'linear'; //logarithmic or linear\nconst autoChartOption = document.querySelector('.autoChartOption');\nautoChartOption.addEventListener('click', changeChartScale)\nconst logChartOption = document.querySelector('.logChartOption');\nlogChartOption.addEventListener('click', changeChartScale);\nfunction changeChartScale(event) {\n\n    if (event.target.classList.contains('autoChartOption')) {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        chartScale = 'linear';\n        displayedChart.options.scales.y.type = chartScale;\n        displayedChart.update();\n} else {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        chartScale = 'logarithmic';\n        displayedChart.options.scales.y.type = chartScale;\n        displayedChart.update();\n    }\n}\n\n    // CODE FOR THE CHART.JS LIBRARY\nconst ctx = document.querySelector('.chart');\n\nconst displayedChart = new Chart(ctx, {\n    type: 'line',  // data: assetPricesData,\n    data: {\n        labels: chartTimeframe,\n        datasets: assetPricesData,\n    },\n    options: {\n        type: chartScale,\n        display: true,\n        position: 'left',\n    }\n  });\n\n// event listener for keeping canvas proper size\nonresize = () => {\n    ctx.style.width = '100%';\n    ctx.style.height = '100%';\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}