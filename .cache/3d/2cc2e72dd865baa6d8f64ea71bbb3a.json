{"id":"script.js","dependencies":[{"name":"/Users/kevin/Desktop/Coding Practice/Charting-Practice/package.json","includedInParent":true,"mtime":1675214658440}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// Bitcoin data from an API\n\n//variables\nvar getDataButton = document.querySelector('.getDataButton');\nvar bitcoinPriceURL = 'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=365&interval=daily';\n\n//async await code\nfunction fetchData() {\n  return _fetchData.apply(this, arguments);\n}\nfunction _fetchData() {\n  _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response, bitcoinData, bitcoinPrice, i, timeframe, price;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(bitcoinPriceURL);\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n        case 5:\n          bitcoinData = _context.sent;\n          _context.next = 8;\n          return bitcoinData.prices;\n        case 8:\n          bitcoinPrice = _context.sent;\n          // extraction of the desired data from dataset (time and price)\n          for (i = 0; i < bitcoinPrice.length; i++) {\n            timeframe = bitcoinPrice[i][0];\n            price = Math.round(bitcoinPrice[i][1]);\n            chartTimeframe.push(timeframe);\n            chartPrice.push(price);\n          }\n          ;\n\n          // console price and time values\n          console.log(chartTimeframe);\n          console.log(chartPrice);\n\n          // update the chart with new data\n          displayedChart.data.labels = chartTimeframe;\n          displayedChart.data.datasets.forEach(function (dataset) {\n            dataset.data = chartPrice;\n          });\n          displayedChart.update();\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _fetchData.apply(this, arguments);\n}\n;\nvar chartTimeframe = [];\nvar chartPrice = [];\ngetDataButton.addEventListener('click', fetchData);\n\n// Code for the charting librarby ChartJS\nvar ctx = document.querySelector('.chart');\nvar displayedChart = new Chart(ctx, {\n  type: 'line',\n  data: {\n    labels: [chartTimeframe],\n    datasets: [{\n      data: [chartPrice],\n      label: 'Price of Bitcoin',\n      borderWidth: 1\n    }]\n  },\n  options: {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":2,"column":47},"source":"script.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"script.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":0},"source":"script.js","original":{"line":2,"column":0}},{"generated":{"line":5,"column":0},"source":"script.js","original":{"line":1,"column":4}},{"generated":{"line":7,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":8,"column":0},"source":"script.js","original":{"line":4,"column":0}},{"generated":{"line":8,"column":4},"source":"script.js","original":{"line":4,"column":6},"name":"getDataButton"},{"generated":{"line":8,"column":17},"source":"script.js","original":{"line":4,"column":19}},{"generated":{"line":8,"column":20},"source":"script.js","original":{"line":4,"column":22},"name":"document"},{"generated":{"line":8,"column":28},"source":"script.js","original":{"line":4,"column":30}},{"generated":{"line":8,"column":29},"source":"script.js","original":{"line":4,"column":31},"name":"querySelector"},{"generated":{"line":8,"column":42},"source":"script.js","original":{"line":4,"column":44}},{"generated":{"line":8,"column":43},"source":"script.js","original":{"line":4,"column":45}},{"generated":{"line":8,"column":59},"source":"script.js","original":{"line":4,"column":61}},{"generated":{"line":8,"column":60},"source":"script.js","original":{"line":4,"column":62}},{"generated":{"line":9,"column":0},"source":"script.js","original":{"line":5,"column":0}},{"generated":{"line":9,"column":4},"source":"script.js","original":{"line":5,"column":6},"name":"bitcoinPriceURL"},{"generated":{"line":9,"column":19},"source":"script.js","original":{"line":5,"column":21}},{"generated":{"line":9,"column":22},"source":"script.js","original":{"line":5,"column":24}},{"generated":{"line":9,"column":123},"source":"script.js","original":{"line":5,"column":125}},{"generated":{"line":11,"column":0},"source":"script.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"script.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":9},"source":"script.js","original":{"line":8,"column":15},"name":"fetchData"},{"generated":{"line":12,"column":18},"source":"script.js","original":{"line":8,"column":24}},{"generated":{"line":13,"column":2},"source":"script.js","original":{"line":8,"column":24}},{"generated":{"line":14,"column":0},"source":"script.js","original":{"line":8,"column":24}},{"generated":{"line":15,"column":0},"source":"script.js","original":{"line":8,"column":24}},{"generated":{"line":16,"column":2},"source":"script.js","original":{"line":8,"column":24}},{"generated":{"line":16,"column":74},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":4},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":4},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":6},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":8},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":10},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":22,"column":10},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":22,"column":17},"source":"script.js","original":{"line":11,"column":25},"name":"fetch"},{"generated":{"line":22,"column":22},"source":"script.js","original":{"line":11,"column":30}},{"generated":{"line":22,"column":23},"source":"script.js","original":{"line":11,"column":31},"name":"bitcoinPriceURL"},{"generated":{"line":22,"column":38},"source":"script.js","original":{"line":11,"column":46}},{"generated":{"line":22,"column":39},"source":"script.js","original":{"line":11,"column":47}},{"generated":{"line":23,"column":8},"source":"script.js","original":{"line":11,"column":47}},{"generated":{"line":24,"column":10},"source":"script.js","original":{"line":11,"column":8},"name":"response"},{"generated":{"line":24,"column":18},"source":"script.js","original":{"line":11,"column":16}},{"generated":{"line":25,"column":10},"source":"script.js","original":{"line":11,"column":16}},{"generated":{"line":26,"column":10},"source":"script.js","original":{"line":11,"column":16}},{"generated":{"line":26,"column":17},"source":"script.js","original":{"line":12,"column":28},"name":"response"},{"generated":{"line":26,"column":25},"source":"script.js","original":{"line":12,"column":36}},{"generated":{"line":26,"column":26},"source":"script.js","original":{"line":12,"column":37},"name":"json"},{"generated":{"line":26,"column":30},"source":"script.js","original":{"line":12,"column":41}},{"generated":{"line":26,"column":32},"source":"script.js","original":{"line":12,"column":43}},{"generated":{"line":27,"column":8},"source":"script.js","original":{"line":12,"column":43}},{"generated":{"line":28,"column":10},"source":"script.js","original":{"line":12,"column":8},"name":"bitcoinData"},{"generated":{"line":28,"column":21},"source":"script.js","original":{"line":12,"column":19}},{"generated":{"line":29,"column":10},"source":"script.js","original":{"line":12,"column":19}},{"generated":{"line":30,"column":10},"source":"script.js","original":{"line":12,"column":19}},{"generated":{"line":30,"column":17},"source":"script.js","original":{"line":13,"column":29},"name":"bitcoinData"},{"generated":{"line":30,"column":28},"source":"script.js","original":{"line":13,"column":40}},{"generated":{"line":30,"column":29},"source":"script.js","original":{"line":13,"column":41},"name":"prices"},{"generated":{"line":30,"column":35},"source":"script.js","original":{"line":13,"column":47}},{"generated":{"line":31,"column":8},"source":"script.js","original":{"line":13,"column":47}},{"generated":{"line":32,"column":10},"source":"script.js","original":{"line":13,"column":8},"name":"bitcoinPrice"},{"generated":{"line":32,"column":22},"source":"script.js","original":{"line":13,"column":20}},{"generated":{"line":33,"column":10},"source":"script.js","original":{"line":15,"column":4}},{"generated":{"line":34,"column":10},"source":"script.js","original":{"line":16,"column":4}},{"generated":{"line":34,"column":15},"source":"script.js","original":{"line":16,"column":13},"name":"i"},{"generated":{"line":34,"column":16},"source":"script.js","original":{"line":16,"column":14}},{"generated":{"line":34,"column":19},"source":"script.js","original":{"line":16,"column":17}},{"generated":{"line":34,"column":20},"source":"script.js","original":{"line":16,"column":18}},{"generated":{"line":34,"column":22},"source":"script.js","original":{"line":16,"column":20},"name":"i"},{"generated":{"line":34,"column":23},"source":"script.js","original":{"line":16,"column":21}},{"generated":{"line":34,"column":26},"source":"script.js","original":{"line":16,"column":24},"name":"bitcoinPrice"},{"generated":{"line":34,"column":38},"source":"script.js","original":{"line":16,"column":36}},{"generated":{"line":34,"column":39},"source":"script.js","original":{"line":16,"column":37},"name":"length"},{"generated":{"line":34,"column":45},"source":"script.js","original":{"line":16,"column":43}},{"generated":{"line":34,"column":47},"source":"script.js","original":{"line":16,"column":45},"name":"i"},{"generated":{"line":34,"column":48},"source":"script.js","original":{"line":16,"column":46}},{"generated":{"line":34,"column":50},"source":"script.js","original":{"line":16,"column":48}},{"generated":{"line":34,"column":52},"source":"script.js","original":{"line":16,"column":50}},{"generated":{"line":35,"column":12},"source":"script.js","original":{"line":17,"column":12},"name":"timeframe"},{"generated":{"line":35,"column":21},"source":"script.js","original":{"line":17,"column":21}},{"generated":{"line":35,"column":24},"source":"script.js","original":{"line":17,"column":24},"name":"bitcoinPrice"},{"generated":{"line":35,"column":36},"source":"script.js","original":{"line":17,"column":36}},{"generated":{"line":35,"column":37},"source":"script.js","original":{"line":17,"column":37},"name":"i"},{"generated":{"line":35,"column":38},"source":"script.js","original":{"line":17,"column":38}},{"generated":{"line":35,"column":39},"source":"script.js","original":{"line":17,"column":39}},{"generated":{"line":35,"column":40},"source":"script.js","original":{"line":17,"column":40}},{"generated":{"line":35,"column":41},"source":"script.js","original":{"line":17,"column":41}},{"generated":{"line":35,"column":42},"source":"script.js","original":{"line":17,"column":42}},{"generated":{"line":36,"column":12},"source":"script.js","original":{"line":18,"column":12},"name":"price"},{"generated":{"line":36,"column":17},"source":"script.js","original":{"line":18,"column":17}},{"generated":{"line":36,"column":20},"source":"script.js","original":{"line":18,"column":20},"name":"Math"},{"generated":{"line":36,"column":24},"source":"script.js","original":{"line":18,"column":24}},{"generated":{"line":36,"column":25},"source":"script.js","original":{"line":18,"column":25},"name":"round"},{"generated":{"line":36,"column":30},"source":"script.js","original":{"line":18,"column":30}},{"generated":{"line":36,"column":31},"source":"script.js","original":{"line":18,"column":31},"name":"bitcoinPrice"},{"generated":{"line":36,"column":43},"source":"script.js","original":{"line":18,"column":43}},{"generated":{"line":36,"column":44},"source":"script.js","original":{"line":18,"column":44},"name":"i"},{"generated":{"line":36,"column":45},"source":"script.js","original":{"line":18,"column":45}},{"generated":{"line":36,"column":46},"source":"script.js","original":{"line":18,"column":46}},{"generated":{"line":36,"column":47},"source":"script.js","original":{"line":18,"column":47}},{"generated":{"line":36,"column":48},"source":"script.js","original":{"line":18,"column":48}},{"generated":{"line":36,"column":49},"source":"script.js","original":{"line":18,"column":49}},{"generated":{"line":36,"column":50},"source":"script.js","original":{"line":18,"column":50}},{"generated":{"line":37,"column":12},"source":"script.js","original":{"line":20,"column":8},"name":"chartTimeframe"},{"generated":{"line":37,"column":26},"source":"script.js","original":{"line":20,"column":22}},{"generated":{"line":37,"column":27},"source":"script.js","original":{"line":20,"column":23},"name":"push"},{"generated":{"line":37,"column":31},"source":"script.js","original":{"line":20,"column":27}},{"generated":{"line":37,"column":32},"source":"script.js","original":{"line":20,"column":28},"name":"timeframe"},{"generated":{"line":37,"column":41},"source":"script.js","original":{"line":20,"column":37}},{"generated":{"line":37,"column":42},"source":"script.js","original":{"line":20,"column":38}},{"generated":{"line":38,"column":12},"source":"script.js","original":{"line":21,"column":8},"name":"chartPrice"},{"generated":{"line":38,"column":22},"source":"script.js","original":{"line":21,"column":18}},{"generated":{"line":38,"column":23},"source":"script.js","original":{"line":21,"column":19},"name":"push"},{"generated":{"line":38,"column":27},"source":"script.js","original":{"line":21,"column":23}},{"generated":{"line":38,"column":28},"source":"script.js","original":{"line":21,"column":24},"name":"price"},{"generated":{"line":38,"column":33},"source":"script.js","original":{"line":21,"column":29}},{"generated":{"line":38,"column":34},"source":"script.js","original":{"line":21,"column":30}},{"generated":{"line":39,"column":10},"source":"script.js","original":{"line":22,"column":4}},{"generated":{"line":40,"column":10},"source":"script.js","original":{"line":22,"column":5}},{"generated":{"line":42,"column":10},"source":"script.js","original":{"line":24,"column":4}},{"generated":{"line":43,"column":10},"source":"script.js","original":{"line":25,"column":4},"name":"console"},{"generated":{"line":43,"column":17},"source":"script.js","original":{"line":25,"column":11}},{"generated":{"line":43,"column":18},"source":"script.js","original":{"line":25,"column":12},"name":"log"},{"generated":{"line":43,"column":21},"source":"script.js","original":{"line":25,"column":15}},{"generated":{"line":43,"column":22},"source":"script.js","original":{"line":25,"column":16},"name":"chartTimeframe"},{"generated":{"line":43,"column":36},"source":"script.js","original":{"line":25,"column":30}},{"generated":{"line":43,"column":37},"source":"script.js","original":{"line":25,"column":31}},{"generated":{"line":44,"column":10},"source":"script.js","original":{"line":26,"column":4},"name":"console"},{"generated":{"line":44,"column":17},"source":"script.js","original":{"line":26,"column":11}},{"generated":{"line":44,"column":18},"source":"script.js","original":{"line":26,"column":12},"name":"log"},{"generated":{"line":44,"column":21},"source":"script.js","original":{"line":26,"column":15}},{"generated":{"line":44,"column":22},"source":"script.js","original":{"line":26,"column":16},"name":"chartPrice"},{"generated":{"line":44,"column":32},"source":"script.js","original":{"line":26,"column":26}},{"generated":{"line":44,"column":33},"source":"script.js","original":{"line":26,"column":27}},{"generated":{"line":46,"column":10},"source":"script.js","original":{"line":28,"column":4}},{"generated":{"line":47,"column":10},"source":"script.js","original":{"line":29,"column":4},"name":"displayedChart"},{"generated":{"line":47,"column":24},"source":"script.js","original":{"line":29,"column":18}},{"generated":{"line":47,"column":25},"source":"script.js","original":{"line":29,"column":19},"name":"data"},{"generated":{"line":47,"column":29},"source":"script.js","original":{"line":29,"column":23}},{"generated":{"line":47,"column":30},"source":"script.js","original":{"line":29,"column":24},"name":"labels"},{"generated":{"line":47,"column":36},"source":"script.js","original":{"line":29,"column":30}},{"generated":{"line":47,"column":39},"source":"script.js","original":{"line":29,"column":33},"name":"chartTimeframe"},{"generated":{"line":47,"column":53},"source":"script.js","original":{"line":29,"column":47}},{"generated":{"line":48,"column":10},"source":"script.js","original":{"line":30,"column":4},"name":"displayedChart"},{"generated":{"line":48,"column":24},"source":"script.js","original":{"line":30,"column":18}},{"generated":{"line":48,"column":25},"source":"script.js","original":{"line":30,"column":19},"name":"data"},{"generated":{"line":48,"column":29},"source":"script.js","original":{"line":30,"column":23}},{"generated":{"line":48,"column":30},"source":"script.js","original":{"line":30,"column":24},"name":"datasets"},{"generated":{"line":48,"column":38},"source":"script.js","original":{"line":30,"column":32}},{"generated":{"line":48,"column":39},"source":"script.js","original":{"line":30,"column":33},"name":"forEach"},{"generated":{"line":48,"column":46},"source":"script.js","original":{"line":30,"column":40}},{"generated":{"line":48,"column":47},"source":"script.js","original":{"line":30,"column":41}},{"generated":{"line":48,"column":57},"source":"script.js","original":{"line":30,"column":41},"name":"dataset"},{"generated":{"line":48,"column":64},"source":"script.js","original":{"line":30,"column":48}},{"generated":{"line":48,"column":66},"source":"script.js","original":{"line":30,"column":52}},{"generated":{"line":49,"column":12},"source":"script.js","original":{"line":31,"column":8},"name":"dataset"},{"generated":{"line":49,"column":19},"source":"script.js","original":{"line":31,"column":15}},{"generated":{"line":49,"column":20},"source":"script.js","original":{"line":31,"column":16},"name":"data"},{"generated":{"line":49,"column":24},"source":"script.js","original":{"line":31,"column":20}},{"generated":{"line":49,"column":27},"source":"script.js","original":{"line":31,"column":23},"name":"chartPrice"},{"generated":{"line":49,"column":37},"source":"script.js","original":{"line":31,"column":33}},{"generated":{"line":50,"column":10},"source":"script.js","original":{"line":32,"column":4}},{"generated":{"line":50,"column":11},"source":"script.js","original":{"line":32,"column":5}},{"generated":{"line":50,"column":12},"source":"script.js","original":{"line":32,"column":6}},{"generated":{"line":51,"column":10},"source":"script.js","original":{"line":34,"column":4},"name":"displayedChart"},{"generated":{"line":51,"column":24},"source":"script.js","original":{"line":34,"column":18}},{"generated":{"line":51,"column":25},"source":"script.js","original":{"line":34,"column":19},"name":"update"},{"generated":{"line":51,"column":31},"source":"script.js","original":{"line":34,"column":25}},{"generated":{"line":51,"column":33},"source":"script.js","original":{"line":34,"column":27}},{"generated":{"line":52,"column":8},"source":"script.js","original":{"line":34,"column":28}},{"generated":{"line":53,"column":8},"source":"script.js","original":{"line":34,"column":28}},{"generated":{"line":54,"column":10},"source":"script.js","original":{"line":34,"column":28}},{"generated":{"line":55,"column":6},"source":"script.js","original":{"line":34,"column":28}},{"generated":{"line":56,"column":4},"source":"script.js","original":{"line":34,"column":28}},{"generated":{"line":57,"column":2},"source":"script.js","original":{"line":34,"column":28}},{"generated":{"line":57,"column":3},"source":"script.js","original":{"line":36,"column":1}},{"generated":{"line":58,"column":2},"source":"script.js","original":{"line":36,"column":1}},{"generated":{"line":59,"column":0},"source":"script.js","original":{"line":36,"column":1}},{"generated":{"line":60,"column":0},"source":"script.js","original":{"line":36,"column":1}},{"generated":{"line":61,"column":0},"source":"script.js","original":{"line":39,"column":0}},{"generated":{"line":61,"column":4},"source":"script.js","original":{"line":39,"column":4},"name":"chartTimeframe"},{"generated":{"line":61,"column":18},"source":"script.js","original":{"line":39,"column":18}},{"generated":{"line":61,"column":21},"source":"script.js","original":{"line":39,"column":21}},{"generated":{"line":61,"column":23},"source":"script.js","original":{"line":39,"column":23}},{"generated":{"line":62,"column":0},"source":"script.js","original":{"line":40,"column":0}},{"generated":{"line":62,"column":4},"source":"script.js","original":{"line":40,"column":4},"name":"chartPrice"},{"generated":{"line":62,"column":14},"source":"script.js","original":{"line":40,"column":14}},{"generated":{"line":62,"column":17},"source":"script.js","original":{"line":40,"column":17}},{"generated":{"line":62,"column":19},"source":"script.js","original":{"line":40,"column":19}},{"generated":{"line":63,"column":0},"source":"script.js","original":{"line":41,"column":0},"name":"getDataButton"},{"generated":{"line":63,"column":13},"source":"script.js","original":{"line":41,"column":13}},{"generated":{"line":63,"column":14},"source":"script.js","original":{"line":41,"column":14},"name":"addEventListener"},{"generated":{"line":63,"column":30},"source":"script.js","original":{"line":41,"column":30}},{"generated":{"line":63,"column":31},"source":"script.js","original":{"line":41,"column":31}},{"generated":{"line":63,"column":38},"source":"script.js","original":{"line":41,"column":38}},{"generated":{"line":63,"column":40},"source":"script.js","original":{"line":41,"column":40},"name":"fetchData"},{"generated":{"line":63,"column":49},"source":"script.js","original":{"line":41,"column":49}},{"generated":{"line":63,"column":50},"source":"script.js","original":{"line":41,"column":50}},{"generated":{"line":65,"column":0},"source":"script.js","original":{"line":47,"column":4}},{"generated":{"line":66,"column":0},"source":"script.js","original":{"line":48,"column":0}},{"generated":{"line":66,"column":4},"source":"script.js","original":{"line":48,"column":6},"name":"ctx"},{"generated":{"line":66,"column":7},"source":"script.js","original":{"line":48,"column":9}},{"generated":{"line":66,"column":10},"source":"script.js","original":{"line":48,"column":12},"name":"document"},{"generated":{"line":66,"column":18},"source":"script.js","original":{"line":48,"column":20}},{"generated":{"line":66,"column":19},"source":"script.js","original":{"line":48,"column":21},"name":"querySelector"},{"generated":{"line":66,"column":32},"source":"script.js","original":{"line":48,"column":34}},{"generated":{"line":66,"column":33},"source":"script.js","original":{"line":48,"column":35}},{"generated":{"line":66,"column":41},"source":"script.js","original":{"line":48,"column":43}},{"generated":{"line":66,"column":42},"source":"script.js","original":{"line":48,"column":44}},{"generated":{"line":67,"column":0},"source":"script.js","original":{"line":50,"column":0}},{"generated":{"line":67,"column":4},"source":"script.js","original":{"line":50,"column":6},"name":"displayedChart"},{"generated":{"line":67,"column":18},"source":"script.js","original":{"line":50,"column":20}},{"generated":{"line":67,"column":21},"source":"script.js","original":{"line":50,"column":23}},{"generated":{"line":67,"column":25},"source":"script.js","original":{"line":50,"column":27},"name":"Chart"},{"generated":{"line":67,"column":30},"source":"script.js","original":{"line":50,"column":32}},{"generated":{"line":67,"column":31},"source":"script.js","original":{"line":50,"column":33},"name":"ctx"},{"generated":{"line":67,"column":34},"source":"script.js","original":{"line":50,"column":36}},{"generated":{"line":67,"column":36},"source":"script.js","original":{"line":50,"column":38}},{"generated":{"line":68,"column":2},"source":"script.js","original":{"line":51,"column":4},"name":"type"},{"generated":{"line":68,"column":6},"source":"script.js","original":{"line":51,"column":8}},{"generated":{"line":68,"column":8},"source":"script.js","original":{"line":51,"column":10}},{"generated":{"line":68,"column":14},"source":"script.js","original":{"line":51,"column":16}},{"generated":{"line":69,"column":2},"source":"script.js","original":{"line":52,"column":4},"name":"data"},{"generated":{"line":69,"column":6},"source":"script.js","original":{"line":52,"column":8}},{"generated":{"line":69,"column":8},"source":"script.js","original":{"line":52,"column":10}},{"generated":{"line":70,"column":4},"source":"script.js","original":{"line":53,"column":6},"name":"labels"},{"generated":{"line":70,"column":10},"source":"script.js","original":{"line":53,"column":12}},{"generated":{"line":70,"column":12},"source":"script.js","original":{"line":53,"column":14}},{"generated":{"line":70,"column":13},"source":"script.js","original":{"line":53,"column":15},"name":"chartTimeframe"},{"generated":{"line":70,"column":27},"source":"script.js","original":{"line":53,"column":29}},{"generated":{"line":70,"column":28},"source":"script.js","original":{"line":53,"column":30}},{"generated":{"line":71,"column":4},"source":"script.js","original":{"line":54,"column":6},"name":"datasets"},{"generated":{"line":71,"column":12},"source":"script.js","original":{"line":54,"column":14}},{"generated":{"line":71,"column":14},"source":"script.js","original":{"line":54,"column":16}},{"generated":{"line":71,"column":15},"source":"script.js","original":{"line":54,"column":17}},{"generated":{"line":72,"column":6},"source":"script.js","original":{"line":55,"column":8},"name":"data"},{"generated":{"line":72,"column":10},"source":"script.js","original":{"line":55,"column":12}},{"generated":{"line":72,"column":12},"source":"script.js","original":{"line":55,"column":14}},{"generated":{"line":72,"column":13},"source":"script.js","original":{"line":55,"column":15},"name":"chartPrice"},{"generated":{"line":72,"column":23},"source":"script.js","original":{"line":55,"column":25}},{"generated":{"line":72,"column":24},"source":"script.js","original":{"line":55,"column":26}},{"generated":{"line":73,"column":6},"source":"script.js","original":{"line":56,"column":8},"name":"label"},{"generated":{"line":73,"column":11},"source":"script.js","original":{"line":56,"column":13}},{"generated":{"line":73,"column":13},"source":"script.js","original":{"line":56,"column":15}},{"generated":{"line":73,"column":31},"source":"script.js","original":{"line":56,"column":33}},{"generated":{"line":74,"column":6},"source":"script.js","original":{"line":57,"column":8},"name":"borderWidth"},{"generated":{"line":74,"column":17},"source":"script.js","original":{"line":57,"column":19}},{"generated":{"line":74,"column":19},"source":"script.js","original":{"line":57,"column":21}},{"generated":{"line":75,"column":4},"source":"script.js","original":{"line":58,"column":6}},{"generated":{"line":75,"column":5},"source":"script.js","original":{"line":58,"column":7}},{"generated":{"line":76,"column":2},"source":"script.js","original":{"line":59,"column":4}},{"generated":{"line":76,"column":3},"source":"script.js","original":{"line":59,"column":5}},{"generated":{"line":77,"column":2},"source":"script.js","original":{"line":60,"column":4},"name":"options"},{"generated":{"line":77,"column":9},"source":"script.js","original":{"line":60,"column":11}},{"generated":{"line":77,"column":11},"source":"script.js","original":{"line":60,"column":13}},{"generated":{"line":78,"column":4},"source":"script.js","original":{"line":61,"column":6},"name":"scales"},{"generated":{"line":78,"column":10},"source":"script.js","original":{"line":61,"column":12}},{"generated":{"line":78,"column":12},"source":"script.js","original":{"line":61,"column":14}},{"generated":{"line":79,"column":6},"source":"script.js","original":{"line":62,"column":8},"name":"y"},{"generated":{"line":79,"column":7},"source":"script.js","original":{"line":62,"column":9}},{"generated":{"line":79,"column":9},"source":"script.js","original":{"line":62,"column":11}},{"generated":{"line":80,"column":8},"source":"script.js","original":{"line":63,"column":10},"name":"beginAtZero"},{"generated":{"line":80,"column":19},"source":"script.js","original":{"line":63,"column":21}},{"generated":{"line":80,"column":21},"source":"script.js","original":{"line":63,"column":23}},{"generated":{"line":81,"column":6},"source":"script.js","original":{"line":64,"column":8}},{"generated":{"line":82,"column":4},"source":"script.js","original":{"line":65,"column":6}},{"generated":{"line":83,"column":2},"source":"script.js","original":{"line":66,"column":4}},{"generated":{"line":84,"column":0},"source":"script.js","original":{"line":67,"column":2}},{"generated":{"line":84,"column":1},"source":"script.js","original":{"line":67,"column":3}},{"generated":{"line":84,"column":2},"source":"script.js","original":{"line":67,"column":4}}],"sources":{"script.js":"    // Bitcoin data from an API\n\n//variables\nconst getDataButton = document.querySelector('.getDataButton');\nconst bitcoinPriceURL = 'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=365&interval=daily';\n\n//async await code\nasync function fetchData() {\n\n    // Get the dataset from CoinGecko API\n    let response = await fetch(bitcoinPriceURL);\n    let bitcoinData = await response.json();\n    let bitcoinPrice = await bitcoinData.prices;\n\n    // extraction of the desired data from dataset (time and price)\n    for (let i = 0; i < bitcoinPrice.length; i++) {\n        let timeframe = bitcoinPrice[i][0];\n        let price = Math.round(bitcoinPrice[i][1]);\n\n        chartTimeframe.push(timeframe);\n        chartPrice.push(price);\n    };\n\n    // console price and time values\n    console.log(chartTimeframe);\n    console.log(chartPrice);\n\n    // update the chart with new data\n    displayedChart.data.labels = chartTimeframe;\n    displayedChart.data.datasets.forEach(dataset => {\n        dataset.data = chartPrice;\n    });\n    \n    displayedChart.update();\n\n};\n\n\nlet chartTimeframe = [];\nlet chartPrice = [];\ngetDataButton.addEventListener('click', fetchData);\n\n\n\n\n\n    // Code for the charting librarby ChartJS\nconst ctx = document.querySelector('.chart');\n\nconst displayedChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: [chartTimeframe],\n      datasets: [{\n        data: [chartPrice],\n        label: 'Price of Bitcoin',\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });"},"lineCount":null}},"error":null,"hash":"b62d71aa6ad211551cc79a6413eb787f","cacheData":{"env":{}}}